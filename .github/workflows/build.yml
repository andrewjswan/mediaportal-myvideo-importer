name: Build / MyVideo Importer

on:
  push:
    # On Push to Master branch
    branches: 
      - master
    # Ignore all Tags / Release
    tags-ignore:
      - '**'

  workflow_call:
    inputs:
      retention-build:
        description: "Retention Period for Setup files. Default is 90"
        default: 90
        required: false
        type: number
    outputs:
      version:
        description: "MPE1 Version"
        value: ${{ jobs.mpe.outputs.version }}

jobs:
  build:
    name: MyVideo Importer / Build
    runs-on: windows-2019
    steps:
      - name: Setup Visual Studio 2019
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 16.11

      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build
        run: |
          build_git.bat < nul
        working-directory: ${{ github.workspace }}\scripts
        shell: cmd

      - name: Upload Artifact / Plugin
        uses: actions/upload-artifact@v4
        if: ${{ success() }}
        with:
          name: MyVideoImporter
          path: |
            ${{ github.workspace }}\MyVideoImporter\bin\Release\MyVideoImporter.dll
          retention-days: ${{ inputs.retention-build || 90 }}
          if-no-files-found: error

      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}
          key: plugin

  codeql:
    name: CodeQL
    if: "contains(github.event.head_commit.message, '[release]')"
    uses: andrewjswan/MPE/.github/workflows/codeql.yml@master
    needs: 
      - build
    permissions:
      security-events: write
    secrets: inherit

  mpe:
    name: MyVideo Importer / MPE
    runs-on: windows-2019
    needs:
      - build
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}
          key: plugin

      - name: Git Checkout / MPE
        uses: actions/checkout@v4
        with:
          repository: andrewjswan/MPE
          path: MPE

      - name: MP folder for MPEMaker
        run: |
          mkdir "C:\Team MediaPortal"
        shell: cmd

      - name: Link to MPEMaker
        run: |
          mklink /J "C:\Team MediaPortal\MediaPortal" "${{ github.workspace }}\MPE\MPEMaker"
        shell: cmd

      - name: Clear Build folder
        run: |
          del /F /Q *.*
        working-directory: ${{ github.workspace }}\builds
        shell: cmd

      - name: Get MPE1 Version
        id: version
        run: |
          FOR /F "tokens=*" %%i IN ('Tools\sigcheck.exe -accepteula -nobanner -n "..\MyVideoImporter\bin\Release\MyVideoImporter.dll"') DO (ECHO version=%%i >> %GITHUB_OUTPUT%)
        working-directory: ${{ github.workspace }}\scripts
        shell: cmd

      - name: Build MPE1
        run: |
          Create_Installer.bat
        working-directory: ${{ github.workspace }}\scripts
        shell: cmd

      - name: Upload Artifact / MPE1
        uses: actions/upload-artifact@v4
        if: ${{ success() }}
        with:
          name: MyVideoImporter MPE1
          path: |
            ${{ github.workspace }}\builds\MyVideoImporter-*.mpe1
          retention-days: ${{ inputs.retention-build || 90 }}
          if-no-files-found: error

      - name: Save cache
        if: "contains(github.event.head_commit.message, '[release]')"
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}
          key: plugin-mpe

      - name: Git Checkout
        if: "contains(github.event.head_commit.message, '[release]')"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cache
        if: "contains(github.event.head_commit.message, '[release]')"
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}
          key: plugin-mpe

      - name: Update / MPE1 XML
        if: "contains(github.event.head_commit.message, '[release]')"
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update / MPE1 XML for ${{ steps.version.outputs.version }}'
          add: '${{ github.workspace }}\scripts\MyVideoImporter.xml'

  release:
    name: Release MyVideo Importer
    if: "contains(github.event.head_commit.message, '[release]')"
    needs:
      - mpe
    permissions:
      contents: write
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: MyVideoImporter MPE1
          path: release-files

      - name: Check Artifacts
        run: |
          ls -l
        working-directory: release-files

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: MyVideo Importer v${{needs.build.outputs.version}}
          tag_name: v${{needs.build.outputs.version}}
          generate_release_notes: true
          files: |
            release-files/*.mpe1

  ci-status:
    name: Status
    runs-on: ubuntu-latest
    needs:
      - build
      - mpe
    if: always()
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  release-status:
    name: Release Status
    if: "contains(github.event.head_commit.message, '[release]')"
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
  
  cache-clear:
    name: Clear cache
    runs-on: ubuntu-latest
    needs:
      - mpe
    if: always()
    steps:
      - name: Clear cache
        uses: easimon/wipe-cache@main
